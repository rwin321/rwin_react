{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.module.css","components/Profile/Myposts/Post/Post.module.css","assets/imgs/postLogo.jpg","components/Profile/Myposts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatus/StatusForm.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","maxLength20","maxLength","StatusReduxForm","reduxForm","form","onStatusChange","status","deactivateMode","Field","onChange","autoFocus","value","validate","name","onBlur","component","Input","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","className","s","profileStatus","span","onDoubleClick","input","e","currentTarget","updateUserStatus","ProfileDataReduxForm","profile","error","handleSubmit","onSubmit","profileDataEditBtn","styles","formSummaryError","createField","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","profileDescp","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","onClick","Contact","ProfileInfo","Preloader","profileInfoBlock","src","photos","large","userPhoto","photoCamera","target","files","length","savePhoto","uploadPhoto","initialValues","formData","saveProfile","then","Post","likes","setLikesCounter","item","postImg","message","likesCont","likeBtn","i","IconButton","deleteBtn","deletePost","post","id","maxLength40","MyPostReduxForm","placeholder","addPostBtn","MyPosts","memo","postsElements","posts","p","likeCount","likesCount","postsBlock","values","addPost","postText","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.b4c80564.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__gNs5q\",\"contact\":\"ProfileInfo_contact__2d2rl\",\"profileDescp\":\"ProfileInfo_profileDescp__28oxQ\",\"inputFile\":\"ProfileInfo_inputFile__2orLt\",\"profileStatus\":\"ProfileInfo_profileStatus__1AlUf\",\"profileDataEditBtn\":\"ProfileInfo_profileDataEditBtn__1_Qsn\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__27I9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatusWithHooks_profileStatus__2VHT9\",\"span\":\"ProfileStatusWithHooks_span__1T-d_\",\"input\":\"ProfileStatusWithHooks_input__2t62G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__9zG6y\",\"likesCont\":\"Post_likesCont__3GHPU\",\"likes\":\"Post_likes__37z5f\",\"deleteBtn\":\"Post_deleteBtn__IPcGY\",\"likeBtn\":\"Post_likeBtn__168KF\"};","module.exports = __webpack_public_path__ + \"static/media/postLogo.22e0e6fa.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__25v-1\",\"posts\":\"MyPosts_posts__29tyG\",\"addPostBtn\":\"MyPosts_addPostBtn__3T73O Post_deleteBtn__IPcGY\"};","import { Input } from \"../../../../common/FormsControls/FormsControls\";\r\nimport { maxLength } from \"../../../../utils/validators/validators\";\r\nimport React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\n\r\nconst maxLength20 = maxLength(20)\r\n\r\nconst StatusForm = ({ onStatusChange, status, deactivateMode }) => {\r\n    return <form>\r\n        <div>\r\n            <Field onChange={onStatusChange} autoFocus={true} value = {status}\r\n                   validate={ maxLength20 } name={'status'} onBlur={ deactivateMode }\r\n                   component={ Input } />\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst StatusReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'status'\r\n})(StatusForm)\r\n\r\nexport default StatusReduxForm","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileStatusWithHooks.module.css'\r\nimport StatusReduxForm from \"./StatusForm\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n/*    let stateWithSetState = useState(true)\r\n    debugger\r\n    56+94\r\n    let editMode = stateWithSetState[0]\r\n    let setEditMode = stateWithSetState[1]*/\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            {!editMode &&\r\n                <div className={s.span}>\r\n                    <b>Status: </b> <span onDoubleClick={activateMode}>{props.status || '---------'}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div className={s.input}>\r\n                    <StatusReduxForm onStatusChange={onStatusChange}\r\n                                     deactivateMode={deactivateMode}\r\n                                     status={status} />\r\n                    {/*<input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateMode}/>*/}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n    export default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport styles from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, error, handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button className={s.profileDataEditBtn}>save</button>\r\n        </div>\r\n        {\r\n            error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>\r\n        }\r\n        <b>Full Name</b>: {createField('Full name', 'fullName', [], Input)}\r\n        <div>\r\n            <b>About me:</b> {createField('About me', 'aboutMe', [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}> {createField(key, 'contacts.' +  key, [], Input)} </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profileData'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/imgs/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, ...props}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) return <Preloader/>\r\n\r\n    const onMainProfilePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    // color={'primary'} arial-label={'upload picture'} type={'file'} onChange={ onMainProfilePhoto }\r\n    return (\r\n        <div className={ s.profileInfoBlock }>\r\n            <img src={ profile.photos.large || userPhoto} className={ s.photoCamera } />\r\n            { props.isOwner &&\r\n            <input type=\"file\" onChange={ onMainProfilePhoto } className={s.uploadPhoto}/>\r\n            }\r\n            <div className={s.profileStatus}>\r\n                <ProfileStatusWithHooks status={ props.status } updateUserStatus={ props.updateUserStatus }/>\r\n            </div>\r\n            { editMode\r\n                ? <ProfileDataForm initialValues={ profile } profile={ profile } onSubmit={ onSubmit } />\r\n                : <ProfileData profile={ profile } isOwner={ props.isOwner } goToEditMode={ () => { setEditMode(true) } } />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.profileDescp}>\r\n\r\n        <div> <b>Full Name</b>:  {profile.fullName}</div>\r\n        <div>\r\n            <b>About me:</b>  {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'already working'}\r\n        </div>\r\n        { profile.lookingForAJob && <div> <b>skills:</b>  {profile.lookingForAJobDescription }</div> }\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} /> })}\r\n        </div>\r\n        <div>\r\n            { isOwner && <button className={s.profileDataEditBtn} onClick={goToEditMode}> edit </button> }\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React, {useState} from \"react\"\r\nimport s from \"./Post.module.css\"\r\nimport postImg from '../../../../assets/imgs/postLogo.jpg'\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\n\r\nconst Post = (props) => {\r\n\r\n    const [likes, setLikesCounter] = useState(0);\r\n\r\n    const likesCounter = () => {\r\n\r\n        let i = likes;\r\n        for(i; i < 1; i++) {\r\n            setLikesCounter(i + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={postImg}/>\r\n            <span>  {props.message} </span>\r\n            <span className={s.likesCont}>likes: {likes} </span>\r\n            <button className={s.likeBtn} onClick={likesCounter}>like</button>\r\n            <IconButton>\r\n                <DeleteIcon className={s.deleteBtn} onClick={ () => {\r\n                    props.deletePost(props.post.id)\r\n                }} />\r\n            </IconButton>\r\n{/*            <button className={s.deleteBtn} onClick={() => {\r\n                props.deletePost(props.post.id)\r\n            }}>delete\r\n            </button>*/}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength } from \"../../../utils/validators/validators\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength40 = maxLength(40)\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'postText'} validate={maxLength40}\r\n                       name={'postText'} component={Textarea}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.addPostBtn}>add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n})(MyPostsForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    const postsElements = props.posts.map(p => <Post deletePost={props.deletePost} key={p.id} message={p.message} likeCount={p.likesCount} post={p}/> );\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <MyPostReduxForm onSubmit={addNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {addPost, deletePost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const MyPostsContainer = () =>\r\n{\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n            (store) => {\r\n                let state = store.getState();\r\n\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                }\r\n\r\n                return <MyPosts updateNewPostText={onPostChange}\r\n                                addPost={addPost}\r\n                                posts={state.profilePage.posts}\r\n                                newPostText={state.profilePage.newPostText}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n//Previous version, no needn't to do. React making automatically\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /!*updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },*!/\r\n        addPost: (postText) => {\r\n        dispatch(addPostActionCreator(postText));\r\n    }\r\n    }\r\n}*/\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, deletePost})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./Myposts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    debugger\r\n    return (\r\n        <div>\r\n\r\n                <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner}\r\n                profile={props.profile} status={props.status}\r\n                updateUserStatus={props.updateUserStatus} saveProfile={props.saveProfile}\r\n                />\r\n                {\r\n                (() => {\r\n                    if (props.profile != null) {\r\n                        return <MyPostsContainer/>\r\n                    }\r\n                })()\r\n                }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile'\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n\r\n        //refactored (previous version):\r\n        /*axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data);\r\n            })*/\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/*\r\n// Previous version(refactored):\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n*/\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n}\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\n//Previous version:\r\nlet AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent)*/\r\n\r\n"],"sourceRoot":""}