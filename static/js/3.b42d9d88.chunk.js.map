{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Myposts/MyPosts.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataReduxForm","reduxForm","form","profile","error","handleSubmit","onSubmit","className","styles","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","profileDescp","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","Preloader","profileInfoBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","savePhoto","inputFile","profileStatus","initialValues","formData","saveProfile","then","Post","item","message","likes","likeCount","maxLength10","maxLength","MyPostReduxForm","Field","placeholder","validate","required","name","component","MyPosts","React","memo","postsElements","posts","p","id","likesCount","postsBlock","values","addPost","postText","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.b42d9d88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__1KcMP\",\"mainPhoto\":\"ProfileInfo_mainPhoto__V3K9b\",\"contact\":\"ProfileInfo_contact__11w8E\",\"profileDescp\":\"ProfileInfo_profileDescp__34buW\",\"inputFile\":\"ProfileInfo_inputFile__30pJH\",\"profileStatus\":\"ProfileInfo_profileStatus__3ekSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2eCo4\",\"posts\":\"MyPosts_posts__1veCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Zaup\",\"likes\":\"Post_likes__3zFfr\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n/*    let stateWithSetState = useState(true)\r\n    debugger\r\n    56+94\r\n    let editMode = stateWithSetState[0]\r\n    let setEditMode = stateWithSetState[1]*/\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    let activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={activateMode}>{props.status || '---------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateMode}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n    export default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport styles from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, error, handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        {\r\n            error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>\r\n        }\r\n        <b>Full Name</b>: {createField('Full name', 'fullName', [], Input)}\r\n        <div>\r\n            <b>About me:</b> {createField('About me', 'aboutMe', [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}> {createField(key, 'contacts.' +  key, [], Input)} </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profileData'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/imgs/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, ...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainProfilePhoto = (e) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoBlock}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n            </div>\r\n            { props.isOwner && <input type={'file'} onChange={onMainProfilePhoto} className={s.inputFile} /> }\r\n            <div className={s.profileStatus}>\r\n                <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            </div>\r\n            { editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                : <ProfileData profile={profile} isOwner={props.isOwner} goToEditMode={() => {setEditMode(true)}} />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.profileDescp}>\r\n        <div>\r\n            { isOwner && <button onClick={goToEditMode}> edit </button> }\r\n        </div>\r\n        <div> <b>Full Name</b>:  {profile.fullName}</div>\r\n        <div>\r\n            <b>About me:</b>  {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'already working'}\r\n        </div>\r\n        { profile.lookingForAJob && <div> <b>skills:</b>  {profile.lookingForAJobDescription }</div> }\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} /> })}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://mynorthwest.com/wp-content/uploads/2019/11/zebra-620Getty.jpg\" />\r\n      <span>  {props.message} </span>\r\n      <div className={s.likes}>\r\n            <span>likes:</span> {props.likeCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nlet maxLength10 = maxLength(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'postText'} validate={[required, maxLength10]}\r\n                       name={'postText'} component={Textarea}/>\r\n            </div>\r\n            <div>\r\n                <button>add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n})(MyPostsForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <MyPostReduxForm onSubmit={addNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const MyPostsContainer = () =>\r\n{\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n            (store) => {\r\n                let state = store.getState();\r\n\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                }\r\n\r\n                return <MyPosts updateNewPostText={onPostChange}\r\n                                addPost={addPost}\r\n                                posts={state.profilePage.posts}\r\n                                newPostText={state.profilePage.newPostText}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n//Previous version, no needn't to do. React making automatically\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /!*updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },*!/\r\n        addPost: (postText) => {\r\n        dispatch(addPostActionCreator(postText));\r\n    }\r\n    }\r\n}*/\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./Myposts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner}\r\n                         profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile'\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        debugger\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n\r\n        //refactored (previous version):\r\n        /*axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data);\r\n            })*/\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/*\r\n// Previous version(refactored):\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n}\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\n//Previous version:\r\nlet AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent)*/\r\n\r\n"],"sourceRoot":""}