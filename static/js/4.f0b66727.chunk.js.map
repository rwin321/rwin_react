{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","active","logoImg","src","alt","to","name","Message","messagesContent","message","maxLength100","maxLength","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","WithAuthRedirect"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,2B,+FCavOC,EAVK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,8BAAM,yBAAKH,UAAWC,IAAEG,QAASC,IAAI,qEAAqEC,IAAI,oBAC9G,8BAAM,kBAAC,IAAD,CAASC,GAAIT,GAAOD,EAAMW,SCK7BC,EAVC,SAACZ,GAEb,OACI,yBAAKG,UAAWC,IAAES,iBACd,yBAAKV,UAAWC,IAAEU,SAAUd,EAAMc,SAClC,gC,kCCmCRC,EAAeC,YAAU,KAavBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXL,SAAClB,GACpB,OAAO,0BAAMoB,SAAUpB,EAAMqB,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAeJ,KAAM,iBAAkBgB,YAAa,uBAEzG,6BACI,6CAQGC,EApDC,SAAC5B,GAEb,IAAI6B,EAAQ7B,EAAM8B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAavB,KAAMuB,EAAEvB,KAAMT,GAAIgC,EAAEhC,QAE1EiC,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASZ,GAAImC,EAAEnC,QAiBlF,OACI,yBAAKC,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEkC,cACbP,GAEL,yBAAK5B,UAAWC,IAAEgC,UACd,6BAAMD,IAEV,kBAAClB,EAAD,CAAqBG,SAZT,SAACmB,GACjBvC,EAAMwC,YAAYD,EAAOE,qB,wBCoBlBC,sBACXC,aAhBkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,eAcE,CAACU,kBAC1BI,IAFWF,CAGbd","file":"static/js/4.f0b66727.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2_q0H\",\"dialogsItems\":\"Dialogs_dialogsItems__15Euw\",\"dialog\":\"Dialogs_dialog__jrvvh\",\"active\":\"Dialogs_active__2fdKX\",\"logoImg\":\"Dialogs_logoImg__2EL3O\",\"messages\":\"Dialogs_messages__1OjnU\",\"message\":\"Dialogs_message__3jTDq\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <span><img className={s.logoImg} src=\"https://miro.medium.com/fit/c/256/256/2*xhm2q3S8_kRKnrHumo3Rvg.png\" alt=\"ervin_just_win\"/></span>\r\n            <span><NavLink to={path}>{props.name}</NavLink></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.messagesContent}>\r\n            <div className={s.message}>{props.message}</div>\r\n            <div></div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>);\r\n\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} id={m.id}/>);\r\n    \r\n\r\n    // let newMessageElement = React.createRef();\r\n/*    let onMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n    let onMessageChange = (e) => {\r\n        let newText = e.target.value;\r\n        props.updateNewMessageText(newText);\r\n    }\r\n    */\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength100 = maxLength(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} validate={[required, maxLength100]} name={'newMessageBody'} placeholder={'Enter new message'} />\r\n        </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs","import React from 'react'\r\n\r\nimport {sendMessage} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n/*const DialogsContainer = () => {\r\n\r\n\r\n    return <StoreContext.Consumer>\r\n        { store => {\r\n            let state = store.getState().dialogsPage;\r\n\r\n            let onMessageClick = () => {\r\n               store.dispatch(sendMessageCreator())\r\n            }\r\n            let onMessageChange = (newText) => {\r\n               store.dispatch(updateNewMessageTextCreator(newText))\r\n            }\r\n\r\n            return <Dialogs\r\n                updateNewMessageText={onMessageChange}\r\n                sendMessageCreator={onMessageClick}\r\n                dialogsPage={store.getState().dialogsPage}/>\r\n        }\r\n    }\r\n    </StoreContext.Consumer>\r\n}*/\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n//Previous version:\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessage(newMessageBody))\r\n        }\r\n    }\r\n}*/\r\n//So now we don't use mapDispatchToProps, we use instead just name of our AC in connect func, which automatically making same\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n\r\n/*\r\n//Previous version:\r\nlet AuthRedirectComponent = WithAuthRedirect(Dialogs)\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default DialogsContainer\r\n*/\r\n"],"sourceRoot":""}