{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Myposts/MyPosts.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","userPhoto","profileStatus","profileDescp","aboutMe","contacts","facebook","lookingForAJob","Preloader","Post","item","message","likes","likeCount","maxLength10","maxLength","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","name","component","Textarea","MyPosts","React","memo","console","log","postsElements","posts","map","p","likesCount","postsBlock","values","addPost","postText","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.c3717ba4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3B5tR\",\"profileImg\":\"ProfileInfo_profileImg__1-ezm\",\"profileDescp\":\"ProfileInfo_profileDescp__34buW\",\"profileStatus\":\"ProfileInfo_profileStatus__3ekSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2eCo4\",\"posts\":\"MyPosts_posts__1veCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Zaup\",\"likes\":\"Post_likes__3zFfr\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n/*    let stateWithSetState = useState(true)\r\n    debugger\r\n    let editMode = stateWithSetState[0]\r\n    let setEditMode = stateWithSetState[1]*/\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    let activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>status: {props.status || '---------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateMode}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n    export default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/imgs/user.png\";\r\n\r\nconst ProfileInfo = ({profile, ...props}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto}/>\r\n            </div>\r\n            <div className={s.profileStatus}>\r\n            <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            </div>\r\n            <div className={s.profileDescp}>\r\n                <div>About me: {profile.aboutMe}</div>\r\n                <div>Contacts: {profile.contacts.facebook || 'no information'}</div>\r\n                <div>Job status: {profile.lookingForAJob ? 'in progress' : 'working'}</div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://mynorthwest.com/wp-content/uploads/2019/11/zebra-620Getty.jpg\" />\r\n      <span>  {props.message} </span>\r\n      <div className={s.likes}>\r\n            <span>likes:</span> {props.likeCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\n\r\nlet maxLength10 = maxLength(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'postText'} validate={[required, maxLength10]}\r\n                       name={'postText'} component={Textarea}/>\r\n            </div>\r\n            <div>\r\n                <button>add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n})(MyPostsForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    console.log('render myPosts')\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likeCount={p.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <MyPostReduxForm onSubmit={addNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {addPost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const MyPostsContainer = () =>\r\n{\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n            (store) => {\r\n                let state = store.getState();\r\n\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                }\r\n\r\n                return <MyPosts updateNewPostText={onPostChange}\r\n                                addPost={addPost}\r\n                                posts={state.profilePage.posts}\r\n                                newPostText={state.profilePage.newPostText}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n//Previous version, no needn't to do. React making automatically\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /!*updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },*!/\r\n        addPost: (postText) => {\r\n        dispatch(addPostActionCreator(postText));\r\n    }\r\n    }\r\n}*/\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./Myposts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile'\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n\r\n        //refactored (previous version):\r\n        /*axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data);\r\n            })*/\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/*\r\n// Previous version(refactored):\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n}\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\n//Previous version:\r\nlet AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent)*/\r\n\r\n"],"sourceRoot":""}