{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.module.css","components/Profile/Myposts/MyPosts.module.css","components/Profile/Myposts/Post/Post.module.css","assets/imgs/postLogo.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/MyPosts.jsx","components/Profile/Myposts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profileStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataReduxForm","reduxForm","form","profile","error","handleSubmit","onSubmit","profileDataEditBtn","styles","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","profileDescp","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","onClick","Contact","ProfileInfo","Preloader","profileInfoBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","savePhoto","inputFile","initialValues","formData","saveProfile","then","Post","item","postImg","message","likes","likeCount","deleteBtn","deletePost","post","id","maxLength10","maxLength","MyPostReduxForm","Field","placeholder","validate","required","name","component","addPostBtn","MyPosts","memo","postsElements","posts","p","likesCount","postsBlock","values","addPost","postText","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"0NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAI,eAJT,GAEXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBChB7EM,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,+BAA+B,QAAU,6BAA6B,aAAe,kCAAkC,UAAY,+BAA+B,cAAgB,mCAAmC,mBAAqB,0C,oBCAjUD,EAAOC,QAAU,CAAC,cAAgB,gD,oBCAlCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,WAAa,oD,oBCAvGD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,UAAY,0B,oBCDpFD,EAAOC,QAAU,IAA0B,sC,wJC4CxBC,EAzCY,SAACN,GAAU,MAQRO,oBAAS,GARD,mBAQjCC,EARiC,KAQvBC,EARuB,OASZF,mBAASP,EAAMU,QATH,mBASjCA,EATiC,KASzBC,EATyB,KAWtCC,qBAAU,WACND,EAAUX,EAAMU,UACjB,CAACV,EAAMU,SAYV,OACI,yBAAKG,UAAWC,IAAEC,gBACZP,GACF,6BACI,uCADJ,IACoB,0BAAMQ,cAff,WACfP,GAAY,KAcgDT,EAAMU,QAAU,cAGvEF,GACD,6BACI,2BAAOS,SAbE,SAACC,GAClBP,EAAUO,EAAEC,cAAcC,QAYeC,WAAW,EAAMD,MAAOV,EAAQY,OAjBxD,WACjBb,GAAY,GACZT,EAAMuB,iBAAiBb,S,mDCgBhBc,EAJcC,YAAU,CACnCC,KAAM,oBADmBD,EA5BL,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aACtC,OAAO,0BAAMC,SAAUD,GACnB,6BACI,4BAAQhB,UAAWC,IAAEiB,oBAArB,SAGAH,GAAS,yBAAKf,UAAWmB,IAAOC,kBAC3BL,GAGT,wCATG,KASgBM,YAAY,YAAa,WAAY,GAAIC,KAC5D,6BACI,wCADJ,IACsBD,YAAY,WAAY,UAAW,GAAIC,MAE7D,6BACI,iDADJ,IAC+BD,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAACC,KAAM,cAEnF,6BACI,qDADJ,KACoCF,YAAY,yBAA0B,4BAA6B,GAAIG,MAE3G,6BACI,uCADJ,KACsBC,OAAOC,KAAKZ,EAAQa,UAAUC,KAAI,SAAAC,GACpD,OAAO,yBAAKA,IAAKA,EAAK7B,UAAWC,IAAE6B,SAA5B,IAAuCT,YAAYQ,EAAK,YAAeA,EAAK,GAAIP,KAAhF,aCiBbS,EAAc,SAAC,GAAsC,IAArCjB,EAAoC,EAApCA,QAASkB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACpC,OAAO,yBAAKjC,UAAWC,IAAEiC,cAErB,iCAAM,wCAAN,MAA0BpB,EAAQqB,UAClC,6BACI,wCADJ,KACuBrB,EAAQsB,SAE/B,6BACI,iDADJ,IAC+BtB,EAAQuB,eAAiB,MAAQ,mBAE9DvB,EAAQuB,gBAAkB,iCAAM,sCAAN,KAAuBvB,EAAQwB,2BAC3D,6BACI,uCADJ,KACsBb,OAAOC,KAAKZ,EAAQa,UAAUC,KAAI,SAAAC,GACpD,OAAO,kBAAC,EAAD,CAASA,IAAKA,EAAKU,aAAcV,EAAKW,aAAc1B,EAAQa,SAASE,SAEhF,6BACMG,GAAW,4BAAQhC,UAAWC,IAAEiB,mBAAoBuB,QAASR,GAAlD,aAOnBS,EAAU,SAAC,GAAkC,IAAjCH,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OAAO,yBAAKxC,UAAWC,IAAE6B,SAAS,2BAAIS,GAA/B,KAAmDC,EAAnD,MAGIG,EAjEK,SAAC,GAAyB,IAAxB7B,EAAuB,EAAvBA,QAAY3B,EAAW,6BAEXO,oBAAS,GAFE,mBAEpCC,EAFoC,KAE1BC,EAF0B,KAKzC,IAAKkB,EACD,OAAO,kBAAC8B,EAAA,EAAD,MAeX,OACI,yBAAK5C,UAAWC,IAAE4C,kBACd,6BACI,yBAAKC,IAAKhC,EAAQiC,OAAOC,OAASC,IAAWjD,UAAWC,IAAEiD,aAE5D/D,EAAM6C,SAAW,2BAAOT,KAAM,OAAQnB,SAjBrB,SAACC,GACrBA,EAAE8C,OAAOC,MAAMC,QACdlE,EAAMmE,UAAUjD,EAAE8C,OAAOC,MAAM,KAeuCpD,UAAWC,IAAEsD,YACnF,yBAAKvD,UAAWC,IAAEC,eACd,kBAAC,EAAD,CAAwBL,OAAQV,EAAMU,OAAQa,iBAAkBvB,EAAMuB,oBAExEf,EACI,kBAAC,EAAD,CAAiB6D,cAAe1C,EAASA,QAASA,EAASG,SAjBxD,SAACwC,GACdtE,EAAMuE,YAAYD,GAAUE,MACxB,WACA/D,GAAY,SAeN,kBAAC,EAAD,CAAakB,QAASA,EAASkB,QAAS7C,EAAM6C,QAASC,aAAc,WAAOrC,GAAY,Q,8DCrB3FgE,EAdF,SAACzE,GACZ,OACE,yBAAKa,UAAWC,IAAE4D,MAChB,yBAAKf,IAAKgB,MACV,mCAAS3E,EAAM4E,QAAf,KACA,yBAAK/D,UAAWC,IAAE+D,OACZ,wCADN,IAC2B7E,EAAM8E,WAE/B,4BAAQjE,UAAWC,IAAEiE,UAAWzB,QAAU,WAAOtD,EAAMgF,WAAWhF,EAAMiF,KAAKC,MAA7E,Y,gBCLFC,EAAcC,YAAU,IAiBxBC,EAAkB5D,YAAU,CAC9BC,KAAM,WADcD,EAfJ,SAACzB,GAEjB,OACI,0BAAM8B,SAAU9B,EAAM6B,cAClB,6BACI,kBAACyD,EAAA,EAAD,CAAOC,YAAa,WAAYC,SAAU,CAACC,IAAUN,GAC9CO,KAAM,WAAYC,UAAWtD,OAExC,6BACI,4BAAQxB,UAAWC,IAAE8E,YAArB,iBAkCDC,EAvBC3F,IAAM4F,MAAK,SAAA9F,GAEvB,IAAM+F,EAAgB/F,EAAMgG,MAAMvD,KAAI,SAAAwD,GAAC,OAAI,kBAAC,EAAD,CAAMjB,WAAYhF,EAAMgF,WAAYtC,IAAKuD,EAAEf,GAAIN,QAASqB,EAAErB,QAASE,UAAWmB,EAAEC,WAAYjB,KAAMgB,OAM7I,OACI,yBAAKpF,UAAWC,IAAEqF,YACd,wCACA,6BACI,kBAACd,EAAD,CAAiBvD,SARV,SAACsE,GAChBpG,EAAMqG,QAAQD,EAAOE,aAQb,yBAAKzF,UAAWC,IAAEkF,OACbD,Q,QCYNQ,EAHUpG,aAlBD,SAACV,GACrB,MAAO,CACHuG,MAAOvG,EAAM+G,YAAYR,SAgBiB,CAACK,YAASrB,gBAAnC7E,CAAgD0F,GC/B1DY,EAfC,SAACzG,GACb,OACI,6BAEI,kBAAC,EAAD,CAAamE,UAAWnE,EAAMmE,UAAWtB,QAAS7C,EAAM6C,QAC3ClB,QAAS3B,EAAM2B,QAASjB,OAAQV,EAAMU,OACtCa,iBAAkBvB,EAAMuB,iBAAkBgD,YAAavE,EAAMuE,cAC1E,kBAAC,EAAD,Q,wBCJNmC,E,+KAGE,IAAIC,EAAS5G,KAAKC,MAAM4G,MAAMC,OAAOF,OACjCA,IACAA,EAAS5G,KAAKC,MAAM8G,mBAEhB/G,KAAKC,MAAM+G,QAAQC,KAAK,UAGhCjH,KAAKC,MAAMiH,eAAeN,GAC1B5G,KAAKC,MAAMkH,cAAcP,K,0CAWzB5G,KAAKoH,mB,yCAEUC,EAAWC,EAAWC,GACjCvH,KAAKC,MAAM4G,MAAMC,OAAOF,QAAUS,EAAUR,MAAMC,OAAOF,QACzD5G,KAAKoH,mB,+BAKT,OACI,kBAAC,EAAD,iBAAapH,KAAKC,MAAlB,CACS6C,SAAU9C,KAAKC,MAAM4G,MAAMC,OAAOF,OAClChF,QAAS5B,KAAKC,MAAM2B,QACpBjB,OAAQX,KAAKC,MAAMU,OACnBa,iBAAkBxB,KAAKC,MAAMuB,iBAC7B4C,UAAWpE,KAAKC,MAAMmE,UACtBI,YAAaxE,KAAKC,MAAMuE,mB,GAtCdrE,IAAML,WAgEtB0H,sBACXpH,aAXkB,SAACV,GACnB,MAAO,CACPkC,QAASlC,EAAM+G,YAAY7E,QAC3BjB,OAAQjB,EAAM+G,YAAY9F,OAC1BoG,iBAAkBrH,EAAME,KAAKgH,OAC7BjH,OAAQD,EAAME,KAAKD,UAMM,CAACuH,mBAAgBC,kBAAe3F,qBAAkB4C,cAAWI,kBACtFiD,IACA5H,IAHW2H,CAIbb","file":"static/js/3.63f5632c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__gNs5q\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2kGge\",\"contact\":\"ProfileInfo_contact__2d2rl\",\"profileDescp\":\"ProfileInfo_profileDescp__28oxQ\",\"inputFile\":\"ProfileInfo_inputFile__2orLt\",\"profileStatus\":\"ProfileInfo_profileStatus__1AlUf\",\"profileDataEditBtn\":\"ProfileInfo_profileDataEditBtn__1_Qsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatusWithHooks_profileStatus__3pQ-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__25v-1\",\"posts\":\"MyPosts_posts__29tyG\",\"addPostBtn\":\"MyPosts_addPostBtn__3T73O Post_deleteBtn__IPcGY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__9zG6y\",\"likes\":\"Post_likes__37z5f\",\"deleteBtn\":\"Post_deleteBtn__IPcGY\"};","module.exports = __webpack_public_path__ + \"static/media/postLogo.22e0e6fa.jpg\";","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileStatusWithHooks.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n/*    let stateWithSetState = useState(true)\r\n    debugger\r\n    56+94\r\n    let editMode = stateWithSetState[0]\r\n    let setEditMode = stateWithSetState[1]*/\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    let activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={activateMode}>{props.status || '---------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateMode}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n    export default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport styles from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, error, handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button className={s.profileDataEditBtn}>save</button>\r\n        </div>\r\n        {\r\n            error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>\r\n        }\r\n        <b>Full Name</b>: {createField('Full name', 'fullName', [], Input)}\r\n        <div>\r\n            <b>About me:</b> {createField('About me', 'aboutMe', [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}> {createField(key, 'contacts.' +  key, [], Input)} </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: 'edit-profileData'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/imgs/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, ...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainProfilePhoto = (e) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoBlock}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n            </div>\r\n            { props.isOwner && <input type={'file'} onChange={onMainProfilePhoto} className={s.inputFile} /> }\r\n            <div className={s.profileStatus}>\r\n                <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            </div>\r\n            { editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                : <ProfileData profile={profile} isOwner={props.isOwner} goToEditMode={() => {setEditMode(true)}} />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.profileDescp}>\r\n\r\n        <div> <b>Full Name</b>:  {profile.fullName}</div>\r\n        <div>\r\n            <b>About me:</b>  {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'already working'}\r\n        </div>\r\n        { profile.lookingForAJob && <div> <b>skills:</b>  {profile.lookingForAJobDescription }</div> }\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} /> })}\r\n        </div>\r\n        <div>\r\n            { isOwner && <button className={s.profileDataEditBtn} onClick={goToEditMode}> edit </button> }\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport postImg from '../../../../assets/imgs/postLogo.jpg'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={postImg} />\r\n      <span>  {props.message} </span>\r\n      <div className={s.likes}>\r\n            <span>likes:</span> {props.likeCount}\r\n      </div>\r\n        <button className={s.deleteBtn} onClick={ () => {props.deletePost(props.post.id)} }>delete</button>\r\n    </div>\r\n      \r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'postText'} validate={[required, maxLength10]}\r\n                       name={'postText'} component={Textarea}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.addPostBtn}>add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n})(MyPostsForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    const postsElements = props.posts.map(p => <Post deletePost={props.deletePost} key={p.id} message={p.message} likeCount={p.likesCount} post={p}/> );\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.postText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <MyPostReduxForm onSubmit={addNewPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {addPost, deletePost} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const MyPostsContainer = () =>\r\n{\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n            (store) => {\r\n                let state = store.getState();\r\n\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                }\r\n\r\n                return <MyPosts updateNewPostText={onPostChange}\r\n                                addPost={addPost}\r\n                                posts={state.profilePage.posts}\r\n                                newPostText={state.profilePage.newPostText}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n//Previous version, no needn't to do. React making automatically\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /!*updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },*!/\r\n        addPost: (postText) => {\r\n        dispatch(addPostActionCreator(postText));\r\n    }\r\n    }\r\n}*/\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, deletePost})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./Myposts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner}\r\n                         profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile'\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n\r\n        //refactored (previous version):\r\n        /*axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data);\r\n            })*/\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n/*\r\n// Previous version(refactored):\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n}\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\n//Previous version:\r\nlet AuthRedirectComponent = WithAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent)*/\r\n\r\n"],"sourceRoot":""}